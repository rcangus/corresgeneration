<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Service.Logging.CustomLogger</name>
    </assembly>
    <members>
        <member name="P:Logging.Services.CustomLogger.Common.AppConfig.OutboundCorroGen">
            <summary>
            The Connection SAtring for the Outbound database
            </summary>
            public string OutboundCorroGen { get { return ConfigurationManager.ConnectionStrings["OutboundCorroGen"].ConnectionString; } }
        </member>
        <member name="P:Logging.Services.CustomLogger.Common.AppConfig.HangfireDb">
            <summary>
            The connections tring for the hangfire database
            </summary>
        </member>
        <member name="P:Logging.Services.CustomLogger.Common.AppConfig.Env">
            <summary>
            The environment we are in. e.g. DEM,DEQ, etc
            </summary>
        </member>
        <member name="P:Logging.Services.CustomLogger.Common.AppConfig.DaysToFilter">
            <summary>
            The numebr of days to filte the corresrequests on. Positive value only
            </summary>
        </member>
        <member name="P:Logging.Services.CustomLogger.Common.AppConfig.HangfireWorkerCount">
            <summary>
            The number of worker threads that Hangfire will use
            </summary>
        </member>
        <member name="P:Logging.Services.CustomLogger.Common.AppConfig.UserToRecordAgainst">
            <summary>
            Teh user string to record batchhostry updates against
            </summary>
        </member>
        <member name="P:Logging.Services.CustomLogger.Common.AppConfig.EventLogServiceName">
            <summary>
            The name of the Event Source for the WIndows EWvent log
            </summary>
        </member>
        <member name="P:Logging.Services.CustomLogger.Common.AppConfig.LogFilePath">
            <summary>
            The path to the service log file
            </summary>
        </member>
        <member name="P:Logging.Services.CustomLogger.Common.AppConfig.APIURL">
            <summary>
            The API REST Endpopint to use
            </summary>
        </member>
        <member name="P:Logging.Services.CustomLogger.Common.AppConfig.Version">
            <summary>
            Returns the version of the application
            </summary>
        </member>
        <member name="P:Logging.Services.CustomLogger.Common.AppConfig.Server">
            <summary>
            Returns the name of the server that is currently executing the code
            </summary>
        </member>
        <member name="M:Logging.Services.CustomLogger.Common.Logger.LogMessage(Logging.Services.Shared.Common.LogMsg,Hangfire.Server.PerformContext)">
            <summary>
            Methdo to call the currently configured logging system to log the message
            </summary>
            <param name="msg">The populated DcsLogMsg to log</param>
            <param name="context">The Hang</param>
            <returns></returns>
        </member>
        <member name="M:Logging.Services.CustomLogger.Controllers.LoggerController.#ctor(Microsoft.Extensions.Logging.ILogger{Logging.Services.CustomLogger.Controllers.LoggerController})">
            <summary>
            
            </summary>
            <param name="log"></param>
        </member>
        <member name="M:Logging.Services.CustomLogger.Controllers.LoggerController.LogMessage(Logging.Services.Shared.Common.LogMsg)">
            <summary>
            Method to log the entry to the configured log end point
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:Logging.Services.CustomLogger.Controllers.LoggerController.GetCurrentConfig">
            <summary>
            Method to get the current config entries for the application. Returns as a string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Logging.Services.CustomLogger.Controllers.LoggerController.Heartbeat">
            <summary>
            Method to get the heartbeat of the service. Provided so that other apps can query the service
            </summary>
            <returns></returns>
        </member>
        <member name="M:Logging.Services.CustomLogger.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:Logging.Services.CustomLogger.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Logging.Services.CustomLogger.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Logging.Services.CustomLogger.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
